#!/bin/bash
#
# Copyright 2023 Dmitry Igrishin
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

echo "FIXME: generate igrilibs_deps.sh and igrilibs_test_deps.sh on the fly" >&2
exit 1

script_dir=$(dirname "$0")
. "${script_dir}/igrilibs_deps.sh" || exit $?
. "${script_dir}/igrilibs_test_deps.sh" || exit $?

err()
{
  echo $* >&2
  exit 1
}

usage()
{
  err "usage: $0 [-a] [-t] library... destination-root"
}

# $1 - lib.
copy_lib()
{
  local lib=$1
  local thirdparty_re='^3rdparty_+'
  if [[ $lib =~ $thirdparty_re ]]; then
    local libpath=$(echo "$lib" | sed -E 's/3rdparty_(.*)$/3rdparty\/\1/g')
  else
    local libpath=$lib
  fi

  # Check if the library is special.
  if [ X"$lib" = X"pthread" ]; then
    return
  fi

  # Check if already copied.
  if [ -d "$dstsrc/$libpath" ]; then
    return
  fi

  # Copy sources.
  if [ -d "$src/src/$libpath" ]; then
    mkdir -p "$dstsrc/$libpath" || exit $?
    copy_files "$src/src/$libpath" "$dstsrc/$libpath"
  else
    err "no library found -- $lib"
  fi

  # Copy cmake and documentation.
  if [ X"$copy_min" = X ]; then
    if [ -d "$src/src/${lib}/cmake" ]; then
      mkdir -p "$dstroot/src/$lib" || exit $?
      cp -Rf "$src/src/${lib}/cmake" "$dstroot/src/${lib}/" || exit $?
    fi

    if [ -d "$src/src/$lib/doc" ]; then
      mkdir -p "$dstroot/src/$lib" || exit $?
      cp -Rf "$src/src/$lib/doc" "$dstroot/src/$lib/" || exit $?
    fi
  fi

  # Copy tests.
  if [ X"$copy_tests" != X ]; then
    if [ -d "$src/src/$lib/test" ]; then
      mkdir -p "$dstroot/src/$lib" || exit $?
      cp -Rf "$src/src/$lib/test" "$dstroot/src/$lib/"
      local test_deps=${lib}_test_deps
      copy_libs ${!test_deps}
    fi
  fi

  # Copy license.
  for f in LICENSE.txt; do
    if [ -f "$f" ]; then
      cp "$src/src/${lib}/$f" "$dstroot/src/$lib/" || exit $?
    fi
  done
}

# $* - libs.
copy_libs()
{
  for lib in $*; do
    # Copy library and it's dependencies.
    deps=${lib}_deps
    deps=${!deps}
    for dep in $deps; do
      copy_lib $dep
    done
    copy_lib $lib
  done
}

# Copies files located in the directory $1 to the directory $2.
# $1 - source dir, $2 - destination dir, $3 - conditions.
copy_files()
{
  eval "find \"$1\" -mindepth 1 -maxdepth 1 $3 -print0" | \
    xargs -0 -I% cp -R % "$2" || exit $?
}

# Process options.
while getopts at opt
do
  case $opt in
    a) a_specified=1 ;;
    t) t_specified=1 ;;
    ?) usage ;;
  esac
done
shift `expr $OPTIND - 1`

if [ X"$a_specified" != X ]; then
  if [ X"$t_specified" = X ]; then
    copy_tests=1
  fi
else
  copy_min=1
  if [ X"$t_specified" != X ]; then
    copy_tests=1
  fi
fi

# Process arguments.
if [ $# -lt 2 ]; then
  usage
fi
src=$(realpath "${script_dir}/..")
while [ $# -gt 1 ]; do
  if [ ! -d "$src/src/$1" ]; then
    err "unknown library specified -- $1"
  fi
  libs="$libs $1"
  shift
done
dstroot=$1

# By default (when only sources requested), copy to the $dstroot directly.
if [ X"$copy_min" != X -a X"$copy_tests" = X ]; then
  dstsrc=$dstroot
else
  dstsrc=$dstroot/src
fi

# Create the destination for sources.
mkdir -p "$dstsrc" || exit $?

# Copy sources.
copy_libs $libs

# Copy other.
if [ X"$copy_min" = X ]; then
  # Copy cmake stuff.
  mkdir -p "$dstroot/cmake" || exit $?
  for f in FindPq FindUv dmitigr dmitigr_librarian; do
    cp "$src/cmake/$f.cmake" "$dstroot/cmake"
  done
  cp "$src/cmake"/dmitigr_libs* "$dstroot/cmake"

  # Copy files from $src/src without subdirectories.
  copy_files "$src/src" "$dstsrc" "-type f -name '*\.in'"

  # Copy files from $src without subdirectories.
  copy_files "$src" "$dstroot" "-type f"

  # Cleanup and remind.
  echo "Don't forget to run cmake(1) to update the auto generated stuff in $dstroot!" >&2
fi
